import{r as n,o as s,c as a,a as t,w as e,b as p,d as o}from"./404.md.eb04a1b3.js";const r='{"title":"Detecting Other Entities","description":"","frontmatter":{"title":"Detecting Other Entities","tags":["intermediate"]},"headers":[{"level":2,"title":"minecraft:entity_sensor","slug":"minecraft-entity-sensor"},{"level":2,"title":"BP Animations & Animation Controllers","slug":"bp-animations-animation-controllers"}],"relativePath":"entities/detecting-other-entities.md","lastUpdated":1637417288688}',l={},i=t("p",null,"You might have thought about making your entities fire an event when other entities are nearby. This article details the various known ways to do so.",-1),c=t("h2",{id:"minecraft-entity-sensor"},[t("a",{class:"header-anchor",href:"#minecraft-entity-sensor","aria-hidden":"true"},"#"),p(" minecraft:entity_sensor")],-1),u=t("p",null,"This is probably the most basic way to detect other entities. The main issues is it only accepts one entry and testing if the entity is out of range can be very tricky. Because it's an entity component, you can just place into your entity behavior file and edit the Minecraft filters. Here's a demonstration:",-1),b=p("BP/entities/my_entity.json#components"),k=o('',4),m=p("BP/animations/detection_animation.json"),d=o('',3),q=p("BP/animations/detection_animation.json"),_=o('',2),y=p("BP/animation_controllers/pig_animation_controllers.json"),h=o('',2),f=p("BP/entities/my_entity.json#description"),g=o('',1);l.render=function(p,o,r,l,v,T){const w=n("CodeHeader");return s(),a("div",null,[i,c,u,t(w,null,{default:e((()=>[b])),_:1}),k,t(w,null,{default:e((()=>[m])),_:1}),d,t(w,null,{default:e((()=>[q])),_:1}),_,t(w,null,{default:e((()=>[y])),_:1}),h,t(w,null,{default:e((()=>[f])),_:1}),g])};export default l;export{r as __pageData};
