import{r as n,o as t,c as s,a,w as e,b as o,d as p}from"./404.md.599ca798.js";const r='{"title":"AFK Detector","description":"","frontmatter":{"title":"AFK Detector","tags":["recipe"]},"headers":[{"level":3,"title":"AFK Detector Animation Controller","slug":"afk-detector-animation-controller"}],"relativePath":"animation-controllers/afk-animation-controller.md","lastUpdated":1626886939145}',l={},u=a("h3",{id:"afk-detector-animation-controller"},[a("a",{class:"header-anchor",href:"#afk-detector-animation-controller","aria-hidden":"true"},"#"),o(" AFK Detector Animation Controller")],-1),i=o("Learn more about Animation Controllers"),c=a("p",null,"Here's an example that can be used to track AFK players.",-1),k=o("BP/animation_controllers/afk.ac.json"),m=p('<div class="language-json line-numbers-mode"><pre><code><span class="token punctuation">{</span>\n\t<span class="token property">&quot;format_version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.10.0&quot;</span><span class="token punctuation">,</span>\n\t<span class="token property">&quot;animation_controllers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t<span class="token property">&quot;controller.animation.player.afk&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t<span class="token property">&quot;states&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token property">&quot;transitions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n\t\t\t\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t\t\t\t<span class="token property">&quot;stands_still&quot;</span><span class="token operator">:</span> <span class="token string">&quot;!query.is_moving&quot;</span>\n\t\t\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t\t<span class="token punctuation">]</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t<span class="token property">&quot;stands_still&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t\t<span class="token property">&quot;on_entry&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/tag @s add AFK&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/say I&#39;m now AFK&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token property">&quot;animations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;afk_animation&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token property">&quot;transitions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n\t\t\t\t\t\t<span class="token punctuation">{</span>\n\t\t\t\t\t\t\t<span class="token property">&quot;default&quot;</span><span class="token operator">:</span> <span class="token string">&quot;query.is_moving&quot;</span>\n\t\t\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t\t<span class="token punctuation">]</span><span class="token punctuation">,</span>\n\t\t\t\t\t<span class="token property">&quot;on_exit&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;/tag @s remove AFK&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/say I&#39;m no longer AFK&quot;</span><span class="token punctuation">]</span>\n\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t<span class="token punctuation">}</span>\n\t\t<span class="token punctuation">}</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><ul><li>&quot;controller.animation.player.afk&quot; is, of course, the identifier.</li><li>If the <a href="https://bedrock.dev/r/MoLang" target="_blank" rel="noopener noreferrer">Molang</a> query <code>!query.is_moving</code> returns false (the player isn&#39;t moving), the state transits to the &quot;stand_still&quot; state. (You can see more about queries <a href="/legacy-guide/custom-entity-full.html">here</a>, in the Resource Entity Definitions tutorial.)</li><li>When the state gets entered, &quot;on_entry&quot; gets triggered, which runs the following slash commands.</li><li>&quot;animations&quot; includes the Behavior Animation&#39;s shortname that is to be ran during the whole time the state is active, just like in <a href="#animation-controller">Resource Animation Controllers</a>.</li><li>If the player is moving again, the state will transit to &quot;default&quot; again. The commands &quot;on_exit&quot; will be executed.</li></ul>',2);l.render=function(o,p,r,l,b,q){const d=n("BButton"),h=n("CodeHeader");return t(),s("div",null,[u,a(d,{color:"blue",link:"animation-controllers-intro"},{default:e((()=>[i])),_:1}),c,a(h,null,{default:e((()=>[k])),_:1}),m])};export default l;export{r as __pageData};
