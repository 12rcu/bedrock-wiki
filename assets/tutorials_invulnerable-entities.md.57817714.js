import{r as n,o as a,c as s,b as e,w as t,d as o,a as p}from"./app.8b820bd7.js";const l='{"title":"Invulnerable Entities","description":"","frontmatter":{"layout":"page","title":"Invulnerable Entities","parent":"Tutorials"},"headers":[{"level":2,"title":"Using Damage Sensor","slug":"using-damage-sensor"},{"level":3,"title":"Completely Invulnerable Entity","slug":"completely-invulnerable-entity"},{"level":3,"title":"Disable Damage from Player","slug":"disable-damage-from-player"},{"level":2,"title":"Min Health","slug":"min-health"}],"relativePath":"tutorials/invulnerable-entities.md","lastUpdated":1617483041758}',r={},i=e("h1",{id:"invulnerable-entities"},[e("a",{class:"header-anchor",href:"#invulnerable-entities","aria-hidden":"true"},"#"),o(" Invulnerable Entities")],-1),c=o("Beginner"),u=p('<h2 id="using-damage-sensor"><a class="header-anchor" href="#using-damage-sensor" aria-hidden="true">#</a> Using Damage Sensor</h2><p>The best and most flexible way of disabling damage for entities is using the <code>minecraft:damage_sensor</code> component. The component allows us to use <code>filters</code> to determine which damage sources are allowed to damage our entity.</p><p>The best way to learn about this component is by using the <a href="https://sirlich.github.io/technical-bedrock/vanilla-usage/components-1.14.html#minecraftdamage_sensor" target="_blank" rel="noopener noreferrer">vanilla examples for damage sensor.</a></p><h3 id="completely-invulnerable-entity"><a class="header-anchor" href="#completely-invulnerable-entity" aria-hidden="true">#</a> Completely Invulnerable Entity</h3><p>{% include filepath.html path=&quot;BP/entities/entity.json&quot; local_path=&quot;minecraft:entity/components&quot;%}</p><div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;minecraft:damage_sensor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;triggers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;cause&quot;</span><span class="token operator">:</span> <span class="token string">&quot;all&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;deals_damage&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="disable-damage-from-player"><a class="header-anchor" href="#disable-damage-from-player" aria-hidden="true">#</a> Disable Damage from Player</h3><p>{% include filepath.html path=&quot;BP/entities/entity.json&quot; local_path=&quot;minecraft:entity/components&quot;%}</p><div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;minecraft:damage_sensor&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;triggers&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;on_damage&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token property">&quot;filters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token property">&quot;test&quot;</span><span class="token operator">:</span> <span class="token string">&quot;is_family&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;subject&quot;</span><span class="token operator">:</span> <span class="token string">&quot;other&quot;</span><span class="token punctuation">,</span>\n                <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;player&quot;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;deals_damage&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="min-health"><a class="header-anchor" href="#min-health" aria-hidden="true">#</a> Min Health</h2><p>The <code>min</code> property in the <code>minecraft:health</code> component allows us to make invincible entities that cannot die. This includes when using <code>./kill @e</code>. This is not considered a good solution, because entities like this are hard to get rid of.</p><p>If you do choose to use this component, please make sure you have another method for killing the entity. Triggering <code>minecraft:instant_despawn</code> from something like an environment sensor, a timer, or an interact is a good solution.</p><p>{% include filepath.html path=&quot;BP/entities/entity.json&quot; local_path=&quot;minecraft:entity/components&quot;%}</p><div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;minecraft:health&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;max&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;min&quot;</span><span class="token operator">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',14);r.render=function(o,p,l,r,m,d){const b=n("Label");return a(),s("div",null,[i,e(b,{color:"green"},{default:t((()=>[c])),_:1}),u])};export default r;export{l as __pageData};
