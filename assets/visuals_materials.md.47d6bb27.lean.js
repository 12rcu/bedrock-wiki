import{r as n,o as s,c as a,a as t,b as p,d as e}from"./404.md.1558d54b.js";const o='{"title":"Materials","description":"","frontmatter":{"title":"Materials","tags":["expert"]},"headers":[{"level":2,"title":"Overview","slug":"overview"},{"level":2,"title":"Syntax and Structure","slug":"syntax-and-structure"},{"level":2,"title":"Useful custom material presets","slug":"useful-custom-material-presets"}],"relativePath":"visuals/materials.md","lastUpdated":1636909855381}',l={},r=t("h2",{id:"overview"},[t("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),p(" Overview")],-1),u=t("p",null,"Materials are used to specify the shaders that render the different parts of the game, along with states and settings the shaders should consider for each element. At the moment, most things in the game are hard-coded to use specific material and may not be assigned new ones. The only way to change how these elements are rendered is by editing their materials directly (potentially having unintentional effects on other parts) or creating new shaders (an old experimental feature no longer officially supported by Mojang). The only elements that allow default or custom materials to be assigned or removed are entities and particles.",-1),c=t("h2",{id:"syntax-and-structure"},[t("a",{class:"header-anchor",href:"#syntax-and-structure","aria-hidden":"true"},"#"),p(" Syntax and Structure")],-1),i=t("p",null,"Most materials inherit the settings of previously defined materials, then further building off of them. This is written in the following format:",-1),k=e('',3),b=e('',2),m=e('',2),q=e('',2),d=e('',2),_=e('',2),y=e('',3);l.render=function(p,e,o,l,h,g){const f=n("CodeHeader");return s(),a("div",null,[r,u,c,i,t(f),k,t(f),b,t(f),m,t(f),q,t(f),d,t(f),_,t(f),y])};export default l;export{o as __pageData};
