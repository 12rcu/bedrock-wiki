import{r as n,o as t,c as e,a as s,w as o,b as a,d as u}from"./404.md.90cff0db.js";const r='{"title":"Creating a custom Entity: Ghost","description":"","frontmatter":{"title":"Creating a custom Entity: Ghost"},"headers":[{"level":2,"title":"Behavior code","slug":"behavior-code"},{"level":3,"title":"Animations","slug":"animations"},{"level":3,"title":"Entity name","slug":"entity-name"},{"level":2,"title":"Your progress so far:","slug":"your-progress-so-far"}],"relativePath":"new-guide/custom-entity.md","lastUpdated":1626119210577}',i={},l=s("p",null,"Last time you created a custom item for this custom entity to drop. This time you will create the Ghost itself, as promised.",-1),p=s("h2",{id:"behavior-code"},[s("a",{class:"header-anchor",href:"#behavior-code","aria-hidden":"true"},"#"),a(" Behavior code")],-1),q=s("p",null,[a("Just like with items, the main files of a custom entity are its RP and BP files. We'll start with the latter in the "),s("code",null,"BP/entities/"),a(" folder: (the "),s("code",null,".e"),a(" suffix after the entity's name specifies that this JSON is an entity file. Recommended in the "),s("a",{href:"./.html"},"Style Guide"),a(".")],-1),c=a("BP/entities/ghost.e.json"),m=u('<p>&quot;`json { &quot;format_version&quot;: &quot;1.16.0&quot;, &quot;minecraft:entity&quot;: { &quot;description&quot;: { &quot;identifier&quot;: &quot;wiki:ghost&quot;, &quot;is_summonable&quot;: true, &quot;is_spawnable&quot;: true, &quot;is_experimental&quot;: false }, &quot;components&quot;: { &quot;minecraft:type_family&quot;: { &quot;family&quot;: [&quot;ghost&quot;, &quot;monster&quot;] }, &quot;minecraft:jump.static&quot;: {}, &quot;minecraft:can_climb&quot;: {}, &quot;minecraft:physics&quot;: {}, &quot;minecraft:movement.basic&quot;: {}, &quot;minecraft:loot&quot;: { &quot;table&quot;: &quot;loot_tables/entities/ghost.json&quot; }, &quot;minecraft:health&quot;: { &quot;value&quot;: 20, &quot;max&quot;: 20 }, &quot;minecraft:collision_box&quot;: { &quot;width&quot;: 1, &quot;height&quot;: 2 }, &quot;minecraft:movement&quot;: { &quot;value&quot;: 0.2 }, &quot;minecraft:behavior.delayed_attack&quot;: { &quot;priority&quot;: 0, &quot;attack_once&quot;: false, &quot;track_target&quot;: true, &quot;require_complete_path&quot;: false, &quot;random_stop_interval&quot;: 0, &quot;reach_multiplier&quot;: 1.5, &quot;speed_multiplier&quot;: 1, &quot;attack_duration&quot;: 0.75, &quot;hit_delay_pct&quot;: 0.5 }, &quot;minecraft:navigation.walk&quot;: { &quot;can_walk&quot;: true, &quot;avoid_sun&quot;: true, &quot;can_pass_doors&quot;: true, &quot;can_open_doors&quot;: true }, &quot;minecraft:attack&quot;: { &quot;damage&quot;: 3 }, &quot;minecraft:behavior.random_look_around&quot;: { &quot;priority&quot;: 7 }, &quot;minecraft:behavior.hurt_by_target&quot;: { &quot;priority&quot;: 1 }, &quot;minecraft:behavior.nearest_attackable_target&quot;: { &quot;priority&quot;: 2, &quot;within_radius&quot;: 25, &quot;reselect_targets&quot;: true, &quot;entity_types&quot;: [ { &quot;filters&quot;: { &quot;any_of&quot;: [ { &quot;test&quot;: &quot;is_family&quot;, &quot;subject&quot;: &quot;other&quot;, &quot;value&quot;: &quot;player&quot; } ] }, &quot;max_dist&quot;: 35 } ] }, &quot;minecraft:behavior.random_stroll&quot;: { &quot;priority&quot;: 6, &quot;speed_multiplier&quot;: 1 }, &quot;minecraft:behavior.look_at_player&quot;: { &quot;priority&quot;: 7, &quot;look_distance&quot;: 6, &quot;probability&quot;: 0.02 } } } }</p><div class="language-"><pre><code>\n-   You can already recognize parts of the file syntax from the custom item creation, such as `&quot;format_version&quot;` and `&quot;description&quot;/&quot;identifier&quot;`. We use the same _namespace_ in all the pack files. In our example case, the namespace is `wiki`. The entity&#39;s _id_ is `ghost`.\n-   The other keys in `&quot;description&quot;` all take Booleans (`true` or `false`) as their values. These are: `&quot; is_summonable&quot;` (whether you can spawn the entity with a `/summon` command), `&quot;is_spawnable&quot;` (whether you can spawn one with a spawn egg or naturally), and `&quot;is_experimental&quot;` (whether you need to turn on [EX] (Experimental mode) in a world for this entity to exist). Set the options to `true`, `true` and `false` respectively. We do not need [EX].\n-   The next section is `&quot;components&quot;`. Again, just like with items, components define the main traits of an entity. Let&#39;s go over every single one in this example:\n\n    -   `&quot;minecraft:type_family&quot; ` lists the _family tags_ of your custom entity. These are used to interact with other entities. For example, Wolves will attack all entities from the `sheep` and `cow` families, while Villagers will flee from entities from the `monster` family.\n    -   `&quot;minecraft:jump.static&quot;` (the entity&#39;s jumps are of the static type), `&quot;minecraft:can_climb&quot;` (the entity can climb blocks), `&quot;minecraft:physics&quot;` (the entity is affected by gravity), `&quot;minecraft:movement.basic&quot;` (the entity&#39;s moves using basic patterns) all take nothing but an empty object `{}` as their values. This is because simply having an _attribute_ listed will ALWAYS apply its traits to the entity. There is a way to temporarily enable and disable attributes using _`component_groups`_ and _`events`_, but that&#39;s for later.\n    -   `&quot;minecraft_loot&quot;` references a file int he pack, `&quot;loot_tables/entities/ghost.json&quot;` under it&#39;s `&quot;table&quot;` key. That file defines what items the entity will drop upon death, and we will create it right after finishing the Ghost.\n    -   `&quot; minecraft:health&quot; ` gives the Ghost 20 health points, which are equivalent to 10 hearts in-game.\n    -   `&quot;minecraft:collision_box&quot;` defines the size of the mob&#39;s hitbox in blocks.\n    -   `&quot; minecraft:movement&quot; ` is, of course, the movement speed.\n    -   `&quot; minecraft:behavior.delayed_attack&quot;` is a _behavior attribute_, which allows the entity to execute some behavior patterns like, in this case, attacking. Its most important options are:\n        -   `&quot; priority&quot;` is often seen in components. If a mob can execute two actions simultaneously, the lower behavior integer will get picked. `0` means the action is always preferred over everything else.\n        -   You can look up the rest of the options on the official Documentation, [bedrock.dev/r/Entities](https://bedrock.dev/r/Entities)\n    -   `&quot;minecraft:navigation.walk&quot;` allows the mob to use its `&quot;movement.basic&quot;` goal and `&quot;movement&quot;` to navigate by walking. The options inside define if the mob should _avoid sun_, _pass doors_ and if it can _walk_ and _open doors_ itself.\n    -   `&quot; minecraft:attack&quot; `/`&quot; damage&quot;` defines the amount of damage the mob deals upon an attack\n    -   `&quot;minecraft:behavior.random_look_around&quot;` allows the mob to sometimes look around itself;\n    -   `&quot; minecraft:behavior.hurt_by_target&quot;` makes the entity immediately choose the entity that damages/_hurts_ them as their target. For example, a Zombie Piglin will act this way.\n    -   `&quot;minecraft:behavior.nearest_attackable_target&quot;` allows the mob to select targets itself (within the radius of 25) as a hostile mob. The `&quot;filters&quot;` in `&quot;entity_type&quot;` will make sure the target belongs to the `player` _family_ in our case, but you could also make it attack villagers, for example, by changing everything inside `&quot; filters&quot;: {}` to\n\n    ```json\n    &quot;any_of&quot;: [\n                {\n                    &quot;test&quot;: &quot;is_family&quot;,\n                    &quot;subject&quot;: &quot;other&quot;,\n                    &quot;value&quot;: &quot;player&quot;\n                },\n                {\n                    &quot;test&quot;: &quot;is_family&quot;,\n                    &quot;subject&quot;: &quot;other&quot;,\n                    &quot;value&quot;: &quot;villager&quot;\n                }\n            ]\n    ```\n\n    -   `&quot;minecraft:behavior.random_stroll&quot;` makes the entity stroll around sometmes;\n    -   And, finally, `&quot;minecraft:behavior.look_at_player&quot;` makes the entity follow the player with its head.\n\n## Resource code\n\nAgain, just like with the item, a custom entity needs a resource file listing its model, texture, and animation names.\n\n&lt;CodeHeader&gt;RP/entity/ghost.e.json&lt;/CodeHeader&gt;\n\n&quot;`json\n{\n    &quot;format_version&quot;: &quot;1.10.0&quot;,\n    &quot;minecraft:client_entity&quot;: {\n        &quot;description&quot;: {\n            &quot;identifier&quot;: &quot;wiki:ghost&quot;,\n            &quot;materials&quot;: {\n                &quot;default&quot;: &quot;entity_alphatest&quot;\n            },\n            &quot;textures&quot;: {\n                &quot;default&quot;: &quot;textures/entity/ghost&quot;\n            },\n            &quot;geometry&quot;: {\n                &quot;default&quot;: &quot;geometry.ghost&quot;\n            },\n            &quot;scripts&quot;: {\n                &quot;animate&quot;: [&quot;walk_controller&quot;, &quot;attack_controller&quot;]\n            },\n            &quot;animations&quot;: {\n                &quot;walk_controller&quot;: &quot;controller.animation.ghost.walk&quot;,\n                &quot;attack_controller&quot;: &quot;controller.animation.ghost.attack&quot;,\n                &quot;attack&quot;: &quot;animation.ghost.attack&quot;,\n                &quot;idle&quot;: &quot;animation.ghost.idle&quot;,\n                &quot;move&quot;: &quot;animation.ghost.move&quot;\n            },\n            &quot;spawn_egg&quot;: {\n                &quot;overlay_color&quot;: &quot;#bdd1d1&quot;,\n                &quot;base_color&quot;: &quot;#9fb3b3&quot;\n            },\n            &quot;render_controllers&quot;: [&quot;controller.render.ghost&quot;]\n        }\n    }\n}\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br></div></div><p>Let&#39;s go over every single object in <code>&quot;description&quot;</code> , as usual:</p><ul><li><code>&quot;identifier&quot;</code> is, of course, the entity&#39;s <code>namespace:id</code>. This tells the game that this file belongs to the same entity as the one defined in <code>BP/entities/ghost.e.json</code>.</li><li><code>&quot; materials&quot; </code> tell the game how to <em>render</em> our entity. Depending on which material you choose, the translucent pixels on the texture might glow, be transparent, or have no effect. We assigned <code>entity_alphatest</code> the shortname <code>default</code> (precisely like with item textures) to allow partly transparent textures, making sense for a ghost. Custom materials are also possible, but they&#39;re more complicated. (You can learn more about materials in general <a href="./.html">here</a>).</li><li><code>&quot;textures&quot;/&quot;default&quot;</code> is the path (relative to the RP folder) to the entity&#39;s texture. Like in <code>item_textures.json</code>, the <code>.png</code> extension can be ignored. Again, the texture path is assigned to the shortname <code>&quot;default&quot;</code>. In some cases, like the Villager mob, you&#39;d want to have multiple textures for the entity to switch between.</li><li><code>&quot;geometry&quot;</code> takes the model&#39;s identifier as its value; Note it for yourself, since we&#39;ll create the model itself in a moment. Again, <code>&quot;default&quot;</code> is the shortname for that.</li><li><code>&quot; scripts&quot;/&quot;animate&quot;</code> and <code>&quot;animations&quot;</code> control when animations are to be played with the help of <em>animation controllers</em> and list them under their <em>shortnames</em> respectively. Again, we&#39;ll come back to this once we have the animations ready.</li><li><code>&quot; spawn_egg&quot; </code> automatically creates an item that will spawn the custom entity on use. It can look in two different ways: one of them can be seen here: both the <code>&quot;overlay&quot;_color&quot; </code> and <code>&quot;base_color&quot;</code> are defined with <a href="https://www.w3schools.com/colors/colors_picker.asp" target="_blank" rel="noopener noreferrer">hex codes</a> in the form of text. The other way would be changing the whole thing to</li></ul><div class="language-json line-numbers-mode"><pre><code> <span class="token property">&quot;spawn_egg&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;texture&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wiki.ectoplasm&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>You can probably remember that <code>&quot;wiki.ectoplasm&quot;</code> is the shortname of our custom item&#39;s texture. If you use this code snippet, the egg will use the same texture as the item instead of a procedurally generated traditional spawn egg.</p><ul><li>And, finally, <code>&quot;render_controllers&quot;</code> lists one or more identifiers of render controllers, which control materials.</li></ul><p>Our next step is creating the mentioned <em>render controller</em> with the id <code>controller.render.ghost</code>. Since our Ghost&#39;s texture, model and materials always remain the same; the following code is quite simple. However, more advanced render controllers typically enable dynamic switching between these. You can learn more about that HERE (TODO).</p>',8),b=a("RP/render_controllers/entity/ghost.rc.json"),d=u('<p>&quot;`json { &quot;format_version&quot;: &quot;1.10.0&quot;, &quot;render_controllers&quot;: { &quot;controller.render.ghost&quot;: { &quot;geometry&quot;: &quot;Geometry.default&quot;, &quot;materials&quot;: [{ &quot;*&quot;: &quot;Material.default&quot; }], &quot;textures&quot;: [&quot;Texture.default&quot;] } } }</p><div class="language-"><pre><code>\nThe id of the only render controllers in this file is `&quot; controller.render.ghost&quot; `, which was referenced in the RP entity folder of the ghost (`RP/entity/ghost.e.json/&quot;render_controllers&quot;`). The code inside tells the game the geometry.\n\n## Visuals\n\nNow it&#39;s time to create the entity&#39;s visuals. An example model, texture, and animation are all already provided with this Guide, but you can learn how to create your own using _Blockbench_ [here]().\n\n### Texture\n\nLike items, the entity textures are simply `.png` files in `RP/textures/entity/`. However, unlike these, entity textures don&#39;t need a file equivalent to `item_textures.json`. Instead, their shortnames are defined in the entity&#39;s RP file (`RP/entity/ghost.e.json` in our case). Usually, the shortname for an entity&#39;s texture is set to `default`, just like in our example.\n\n`RP/textures/entity/ghost.png`\n![Ghost_texture](https://raw.githubusercontent.com/Bedrock-OSS/wiki-addon/main/guide/guide_RP/textures/entity/ghost.png)\n\n### Model\n\n&#39;Model&#39; means &#39;shape&#39; or &#39;geometry&#39;. Entity model JSON files are located in `RP/models/entity/` and, according to the [Style guide](), use the suffix `.geo`.\nBefore you take a look at a models code, which holds data about the size, rotation, and position of every single _cube_ and _bone_, remember that there&#39;s no need to learn its syntax by hard: as mentioned above, model and animation files are all automatically generated by a dedicated 3D editor called [Blockbench]().\n\n&lt;CodeHeader&gt;RP/models/entity/ghost.geo.json&lt;/CodeHeader&gt;\n\n&quot;`json\n{\n    &quot;format_version&quot;: &quot;1.12.0&quot;,\n    &quot;minecraft:geometry&quot;: [\n        {\n            &quot;description&quot;: {\n                &quot;identifier&quot;: &quot;geometry.ghost&quot;,\n                &quot;texture_width&quot;: 64,\n                &quot;texture_height&quot;: 64,\n                &quot;visible_bounds_width&quot;: 3,\n                &quot;visible_bounds_height&quot;: 3.5,\n                &quot;visible_bounds_offset&quot;: [0, 1.25, 0]\n            },\n            &quot;bones&quot;: [\n                {\n                    &quot;name&quot;: &quot;root&quot;,\n                    &quot;pivot&quot;: [0, 3, 0]\n                },\n                {\n                    &quot;name&quot;: &quot;body&quot;,\n                    &quot;parent&quot;: &quot;root&quot;,\n                    &quot;pivot&quot;: [0, 4.625, 0],\n                    &quot;cubes&quot;: [\n                        {\n                            &quot;origin&quot;: [-4, 3, -4],\n                            &quot;size&quot;: [8, 13, 8],\n                            &quot;uv&quot;: [0, 20]\n                        }\n                    ]\n                },\n                {\n                    &quot;name&quot;: &quot;leftArm&quot;,\n                    &quot;parent&quot;: &quot;body&quot;,\n                    &quot;pivot&quot;: [4.6, 15.5, 0.5],\n                    &quot;cubes&quot;: [\n                        {\n                            &quot;origin&quot;: [4.1, 7, -1],\n                            &quot;size&quot;: [3, 9, 3],\n                            &quot;uv&quot;: [32, 32]\n                        }\n                    ]\n                },\n                {\n                    &quot;name&quot;: &quot;rightArm&quot;,\n                    &quot;parent&quot;: &quot;body&quot;,\n                    &quot;pivot&quot;: [-4.5, 15.5, 0.5],\n                    &quot;cubes&quot;: [\n                        {\n                            &quot;origin&quot;: [-7.1, 7, -1],\n                            &quot;size&quot;: [3, 9, 3],\n                            &quot;uv&quot;: [32, 20]\n                        }\n                    ]\n                },\n                {\n                    &quot;name&quot;: &quot;head&quot;,\n                    &quot;parent&quot;: &quot;body&quot;,\n                    &quot;pivot&quot;: [0, 16, 0],\n                    &quot;cubes&quot;: [\n                        {\n                            &quot;origin&quot;: [-5, 16, -5],\n                            &quot;size&quot;: [10, 10, 10],\n                            &quot;uv&quot;: [0, 0]\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><p>The only important thing, pretty much, is the value of <code>&quot;identifier&quot;</code>, which is <code>&quot;geometry.ghost&quot;</code>. As you might remember, this same identifier is referenced in the Ghost&#39;s RP entity file, under <code>&quot;geometry&quot;</code>.</p><h3 id="animations"><a class="header-anchor" href="#animations" aria-hidden="true">#</a> Animations</h3><p>Most of what was said for models is also true for animations. Here&#39;s the code you ought to copy to <code>RP/animations/ghost.a.json</code>. The suffix for resource animation files is <code>.a</code>.</p>',5),h=a("RP/animations/ghost.a.json"),g=u('<p>&quot;`json { &quot;format_version&quot;: &quot;1.8.0&quot;, &quot;animations&quot;: { &quot;animation.ghost.idle&quot;: { &quot;loop&quot;: true, &quot;animation_length&quot;: 3, &quot;bones&quot;: { &quot;body&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [10, 0, 0], &quot;3.0&quot;: [10, 0, 0] }, &quot;position&quot;: { &quot;0.0&quot;: [0, 0, 0], &quot;1.5&quot;: [0, 1, 0], &quot;3.0&quot;: [0, 0, 0] } }, &quot;leftArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-10, 0, 0], &quot;1.5&quot;: [-5, 0, 0], &quot;3.0&quot;: [-10, 0, 0] } }, &quot;rightArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-10, 0, 0], &quot;1.5&quot;: [-5, 0, 0], &quot;3.0&quot;: [-10, 0, 0] } }, &quot;head&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-7.5, 0, 0], &quot;1.5&quot;: [-2.5, 0, 0], &quot;3.0&quot;: [-7.5, 0, 0] } } } }, &quot;animation.ghost.attack&quot;: { &quot;animation_length&quot;: 0.75, &quot;bones&quot;: { &quot;body&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [10, 0, 0], &quot;0.2917&quot;: [10, 15, 0], &quot;0.5&quot;: [22.5, -12.5, 0], &quot;0.75&quot;: [10, 0, 0] }, &quot;position&quot;: { &quot;0.0&quot;: [0, 0, 0], &quot;0.2917&quot;: [0, 0, 3], &quot;0.5&quot;: [0, 0, -3], &quot;0.75&quot;: [0, 0, 0] } }, &quot;leftArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-10, 0, 0], &quot;0.75&quot;: [-10, 0, 0] } }, &quot;rightArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-10, 0, 0], &quot;0.2083&quot;: [-10, 0, 0], &quot;0.2917&quot;: [-10, 62.5, 117.5], &quot;0.5&quot;: [-80, -17.5, 22.5], &quot;0.75&quot;: [-10, 0, 0] } }, &quot;head&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-7.5, 0, 0], &quot;0.75&quot;: [-7.5, 0, 0] } } } }, &quot;animation.ghost.move&quot;: { &quot;loop&quot;: true, &quot;animation_length&quot;: 1, &quot;bones&quot;: { &quot;body&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [15, 0, 0], &quot;0.25&quot;: [15, -2.5, 0], &quot;0.5&quot;: [15, 0, 0], &quot;0.75&quot;: [15, 2.5, 0], &quot;1.0&quot;: [15, 0, 0] }, &quot;position&quot;: [0, 0, 0] }, &quot;leftArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [15, 0, 0], &quot;0.5&quot;: [20, 0, 0], &quot;1.0&quot;: [15, 0, 0] } }, &quot;rightArm&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [15, 0, 0], &quot;0.5&quot;: [20, 0, 0], &quot;1.0&quot;: [15, 0, 0] } }, &quot;head&quot;: { &quot;rotation&quot;: { &quot;0.0&quot;: [-12.5, 0, 0], &quot;0.5&quot;: [-15, 0, 0], &quot;1.0&quot;: [-12.5, 0, 0] } } } } } }</p><div class="language-"><pre><code>\nUnlike the model&#39;s file, this one contains three animations for the Ghost, which are ` &quot;animation. Ghost.idle&quot;` (which is an animation playing from time to time), `&quot;animation.ghost.attack&quot; ` and `&quot;animation.ghost.move&quot;` (quite self-explanatory). Their shortnames, as defined in the Ghost&#39;s RP entity file, are ` &quot;idle&quot;`, `&quot;attack&quot;` and `&quot;move&quot;` respectively.\nOf course, feel free to open the files and check how the visuals look using Blockbench.\n\n### Animation Controller\n\nApproaching the end, we&#39;ll create our Animation Controller file, which will _control_ how the animations are played, as expected.\n\n&lt;CodeHeader&gt;RP/animation_controllers/ghost.ac.json&lt;/CodeHeader&gt;\n\n&quot;`json\n{\n    &quot;format_version&quot;: &quot;1.12.0&quot;,\n    &quot;animation_controllers&quot;: {\n        &quot;controller.animation.ghost.attack&quot;: {\n            &quot;states&quot;: {\n                &quot;default&quot;: {\n                    &quot;transitions&quot;: [\n                        {\n                            &quot;attacking&quot;: &quot;query.is_delayed_attacking&quot;\n                        }\n                    ]\n                },\n                &quot;attacking&quot;: {\n                    &quot;blend_transition&quot;: 0.2,\n                    &quot;animations&quot;: [&quot;attack&quot;],\n                    &quot;transitions&quot;: [\n                        {\n                            &quot;default&quot;: &quot;!query.is_delayed_attacking&quot;\n                        }\n                    ]\n                }\n            }\n        },\n        &quot;controller.animation.ghost.walk&quot;: {\n            &quot;initial_state&quot;: &quot;standing&quot;,\n            &quot;states&quot;: {\n                &quot;standing&quot;: {\n                    &quot;blend_transition&quot;: 0.2,\n                    &quot;animations&quot;: [&quot;idle&quot;],\n                    &quot;transitions&quot;: [\n                        {\n                            &quot;moving&quot;: &quot;query.modified_move_speed &gt; 0.1&quot;\n                        }\n                    ]\n                },\n                &quot;moving&quot;: {\n                    &quot;blend_transition&quot;: 0.2,\n                    &quot;animations&quot;: [&quot;move&quot;],\n                    &quot;transitions&quot;: [\n                        {\n                            &quot;standing&quot;: &quot;query.modified_move_speed &lt; 0.1&quot;\n                        }\n                    ]\n                }\n            }\n        }\n    }\n}\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br></div></div><p>Two animation controllers are listed in this file: <code>&quot;controller.animation.ghost.walk&quot;</code> and <code>&quot;controller.animation.ghost.attack&quot;</code>.</p><p>TODO: Details of each NEED to be explained better</p><p>Let&#39;s take a look at the Ghost&#39;s RP file: just like the <em>animations</em>, the <em>animation controllers</em> get assigned to their shortnames (<code>walk_controller</code> and <code>attack_controller</code> respectively) under <code>&quot;animations&quot;</code>. Now, since the controllers control the animations, they have to constantly run, which is why we put their shortnames in the array of <code>&quot;scripts&quot;/&quot;animate&quot;</code>. (For example, if you put the shortname <code>&quot; move&quot; </code> there, the entity would constantly play the moving animation, even when staying in place. The controller only launches the relevant animation when the entity is doing a certain action, for example, <code>is_walking</code>.)</p><p><code>from RP/entity/ghost.e.json</code></p><div class="language-json line-numbers-mode"><pre><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;animate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">&quot;walk_controller&quot;</span><span class="token punctuation">,</span>\n        <span class="token string">&quot;attack_controller&quot;</span>\n    <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token property">&quot;animations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;walk_controller&quot;</span><span class="token operator">:</span> <span class="token string">&quot;controller.animation.ghost.walk&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;attack_controller&quot;</span><span class="token operator">:</span> <span class="token string">&quot;controller.animation.ghost.attack&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;attack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;animation.ghost.attack&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;idle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;animation.ghost.idle&quot;</span><span class="token punctuation">,</span>\n    <span class="token property">&quot;move&quot;</span><span class="token operator">:</span> <span class="token string">&quot;animation.ghost.move&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="entity-name"><a class="header-anchor" href="#entity-name" aria-hidden="true">#</a> Entity name</h3><p>And finally, we have to define the entity&#39;s and its spawn egg&#39;s in-game names in <code>en_US.lang</code> by adding these lines:</p><p><code>RP/texts/en_US.lang</code></p><div class="language-json line-numbers-mode"><pre><code>entity.wiki<span class="token operator">:</span>ghost.name=Ghost\nitem.spawn_egg.entity.wiki<span class="token operator">:</span>ghost.name=Ghost\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Done! Your entity should now show up in Minecraft, complete with all behaviors and visuals, including animations!</p><h2 id="your-progress-so-far"><a class="header-anchor" href="#your-progress-so-far" aria-hidden="true">#</a> Your progress so far:</h2><p><strong>What you&#39;ve done:</strong></p><ul><li>[x] Setup your pack;</li><li>[x] Create a custom item;</li><li>[x] Create a custom entity;</li></ul><p><strong>What are you to do next:</strong></p><ul><li>[ ] Create the entity&#39;s loot, spawn rules, and a custom recipe;</li></ul><div class="language-"><pre><code></code></pre><div class="line-numbers-wrapper"></div></div>',18);i.render=function(a,u,r,i,f,y){const _=n("CodeHeader");return t(),e("div",null,[l,p,q,s(_,null,{default:o((()=>[c])),_:1}),m,s(_,null,{default:o((()=>[b])),_:1}),d,s(_,null,{default:o((()=>[h])),_:1}),g])};export default i;export{r as __pageData};
